# just for override the default cpp #include snippet over the c one
snippet! inc
	#include<${1:iostream}>

# 2 nested for-loops where i and j both increases
snippet ffor
	for (${1:int} ${2:i}=0; $2<${4:M}; $2++) {
		for ($1 ${3:j}=0; $3<${5:N}; $3++) {
			${6}
		}
	}

# 3 nested for-loops where i,j and k increases
snippet fffor
	for (${1:int} ${2:i}=0; $2<${5:L}; $2++) {
		for ($1 ${3:j}=0; $3<${6:M}; $3++) {
			for ($1 ${4:k}=0; $4<${7:N}; $4++) {
				${8}
			}
		}
	}

# Get accessor
snippet get
	inline const ${2:auto} get${1/\\([a-zA-Z]*\\)\\(_*\\)/\\u\\1/g}(${3:void}) ${4:const}
	{
	  return ${1:Var};
	}

# Bool accessor
snippet is
	inline const bool is${1/\\([a-zA-Z]*\\)\\(_*\\)/\\u\\1/g}(${2:void}) const
	{
	  return ${1:Var};
	}

# Set accessor
snippet set
	inline void set${1/\\([a-zA-Z]*\\)\\(_*\\)/\\u\\1/g}(const ${2:type}  &local_${1/\\([a-zA-Z]*\\)\\(_*\\)/\\1/g})
	{
	  ${1:Var} = local_${1/\\([a-zA-Z]*\\)\\(_*\\)/\\1/g};
	}
